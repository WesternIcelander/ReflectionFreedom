/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class io_siggi_reflectionfreedom_ReflectionFreedom */

#ifndef _Included_io_siggi_reflectionfreedom_ReflectionFreedom
#define _Included_io_siggi_reflectionfreedom_ReflectionFreedom
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     io_siggi_reflectionfreedom_ReflectionFreedom
 * Method:    setAccessible
 * Signature: (Ljava/lang/reflect/AccessibleObject;Z)V
 */
JNIEXPORT void JNICALL Java_io_siggi_reflectionfreedom_ReflectionFreedom_setAccessible
  (JNIEnv *, jclass, jobject, jboolean);

/*
 * Class:     io_siggi_reflectionfreedom_ReflectionFreedom
 * Method:    setModifiers
 * Signature: (Ljava/lang/reflect/AccessibleObject;I)V
 */
JNIEXPORT void JNICALL Java_io_siggi_reflectionfreedom_ReflectionFreedom_setModifiers
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     io_siggi_reflectionfreedom_ReflectionFreedom
 * Method:    allocateObject
 * Signature: (Ljava/lang/Class;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_io_siggi_reflectionfreedom_ReflectionFreedom_allocateObject
  (JNIEnv *, jclass, jclass);

#ifdef __cplusplus
}
#endif
#endif
